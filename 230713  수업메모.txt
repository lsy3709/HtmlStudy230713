#230713수업메모 #화면설계및구현

MPA(Multi Page Application) : 기본 HTML, CSS, JS
여러개 HTML 문서를 사용해서, 뷰를 구성하는 방식. 
장점: 구성이 쉽다, 소규모 적합.
단점: 자원 소모, 대량의 데이터를 처리 시, 속도부분 

SPA(Single Page Application) -> React(Meta), 라이브러리(기능모음집)
-> 활용: 기본 HTML, CSS, JS -> 모바일 가능. 
하나의 HTML 문서 틀에서, body 안에 컨텐츠 내용만 교체 하는 방식. 
장점: 대규모 데이터를 처리해서, 뷰에 전달하는 방식이 최적화. 
단점: 새로운 라이브러리이고, 관련 공부 부분 학습부담. 

추세: 웹에서 화면 구성 추세 MPA -> SPA  넘어가는 추세. 

뷰(리액트, HTML+css+js) 백엔드(데이터를 전달하는 업무,인증,권한,)-DB

-------------------------------------------------------------------

작업 하기전에, 
로컬(현재 본인 컴퓨터 공간), 원격지 저장소(깃 허브 서버) 연동 작업. 
프로젝트 , 
깃(git)-버전관리-(클라우드 저장소)와 비슷하게 생각.

작업
1. 본인 임시 폴더 -> 문서 -> HTML_CSS_JS_Workspace 만들기. 
2. 깃허브 계정 필요. (가입) 3분 ~ 5분 
3. 깃허브 원격지 저장공간 만들기. 
본인 계정 -> 레포지토리 -> 폴더를 만들고 -> 이름, 설명 간단히 작성 -> 
add readme 파일 체크 해제 한 상태에서 만듦. 


4. 본인의 임시폴더 <--> 원격지 깃허브 연동. 
1)vscode에서 편의기능 이용 방법. 
2) vscode에서 터미널 명령어 창에서 이용 방법. 

4-2 git 프로그램 설치
vscode는 재시작 -> 터미널 ->메뉴에서 선택가능(단축키 : ctrl + shift + `)
기본 쉘: power shell 에서 진행을 해보기. 
아래 명령어를 붙여 넣기 작업. 
git add . : 현재 작업 폴더의 모든 파일을 의미. 

echo "# HtmlStudy230713" >> README.md
git init
git add README.md
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/lsy3709/HtmlStudy230713.git
git push -u origin main

4-3 명령어를 복붙 후 , 첫 에러가 나왔고, 기념적(앞으로 계속 마주하게 되는 상황임.)
to set your account's default identity.
Omit --global to set the identity only in this repository.
구글  검색창에 복사를 해서, 관련 블로그 조사했고, 
결론 , 계정을 등록하는 명령어가 필요한 상황. 
참고 블로그,
출처 
https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=skghtjd10&logNo=220496619106

샘플 코드 
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
본인 계정에 맞게 변경. 
git config --global user.email "lsy3709@naver.com"
git config --global user.name "이상용"
변경한 코드 2줄, 다시 명령어창에 입력.
계정 등록 후 ,

다시, 
4-2 번 다시 진행. 
2번째 오류코드, 기존에 원격지 주소가 이미 등록이 되었다. 

여러 해결 책중에서, 
1) 해당 원격지 주소를 삭제 또는 변경 명령어를 검색해서 찾아도 되지만.
2) 로컬의 저장소에서 , git 의 숨긴 폴더를 찾아서 , 삭제하고, 
3) 다시 초기화 작업을 선택. (지금은 테스트, 변경 작업이 몇개 없어서.)

다시, 
4-2 번 다시 진행. 
창, 인증을 하기위한, 일단, 브라우저 상에서 해당 계정으로 권한을 부여 받음. 

5. 쓰기 권한이 필요함. , vscode에서 연동. (토큰, 해당 IDE 의 기능을 이용하는 방법. )
다시, 
4-2 번 다시 진행. 
창, 인증을 하기위한, 일단, 브라우저 상에서 해당 계정으로 권한을 부여 받음. 

6. 테스트. 본인 작업한 내용을 로컬에 저장, 원격지 푸쉬, 풀 하는 상황에 대해서 연습. 
2번째 파일 생성해서, 
vscode의 자동 기능 중에, 왼쪽 네비게이션 메뉴에, 소스 컨트롤에서 
저장 메세지 입력 -> commit -> sync 클릭 하면 , 기본 원격지 저장됩니다. 
!
실습 안내)
1. 본인 로컬에 임시폴더2 만들고, 
2. 원격지 새로 만들고 
3. 로컬 <-> 원격지 연동 
4. 임시 파일 추가해서 자동 저장 확인 까지. 해보기. 

7. 다시 수업 시작. 

